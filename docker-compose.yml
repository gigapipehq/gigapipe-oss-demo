version: '2.1'

volumes:
    grafana_data: {}
    clickhouse_data: {}

services:
  grafana:
    image: grafana/grafana-oss:10.0.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_DEFAULT_THEME=light
      - GF_EXPLORE_ENABLED=true
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_FEATURE_TOGGLES_ENABLE=traceToMetrics,publicDashboards,tempoApmTable
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - clickhouse-server

  clickhouse-server:
    image: clickhouse/clickhouse-server:22.9
    container_name: clickhouse-server
    restart: unless-stopped
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/opentelemetry_zipkin.sql:/docker-entrypoint-initdb.d/opentelemetry_zipkin.sql
    environment:
      - CLICKHOUSE_USER=qryn
      - CLICKHOUSE_PASSWORD=demo
    ports:
      - 8123:8123
      - 9000:9000
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', '127.0.0.1:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30

  qryn:
    image: qxip/qryn:latest
    container_name: qryn
    restart: unless-stopped
    expose:
      - 3100
    ports:
      - "3100:3100"
    environment:
      - CLICKHOUSE_SERVER=clickhouse-server
      - CLICKHOUSE_AUTH=qryn:demo
#      - LOG_LEVEL=debug
      - NODE_OPTIONS="--max-old-space-size=4096"
      - ALERTMAN_URL=http://alertman:9093
    depends_on:
       clickhouse-server:
         condition: service_healthy

  vector:
    image: timberio/vector:latest-alpine
    container_name: vector
    restart: unless-stopped
    volumes:
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
    depends_on:
      - qryn

  exporter:
    build: ./dummy-exporter
    container_name: exporter
    restart: unless-stopped
    ports:
      - "9090:8080"
    depends_on:
      - qryn

  dummy-server:
    build: ./dummy-server
    container_name: dummy-server
    restart: unless-stopped
    ports:
      - 4000:4000
      - 80:80
    depends_on:
      - qryn

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    hostname: mailhog
    expose:
      - 1025
      - 8025
    ports:
      - "8025:8025"
      
  alertman:
    image: prom/alertmanager:latest
    container_name: alertman
    hostname: alertman
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    expose:
      - 9093
    ports:
      - 9093:9093

  otel-collector:
    container_name: otel-collector
    image: ghcr.io/metrico/qryn-otel-collector:latest
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel/config.yaml
    ports:
      - "3200:3100"     # Loki/Logql HTTP receiver
      - "3201:3200"     # Loki/Logql gRPC receiver
      - "8088:8088"     # Splunk HEC receiver
      - "5514:5514"     # Syslog TCP Rereceiverceiver
      - "24224:24224"   # Fluent Forward receiver
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "14250:14250"   # Jaeger gRPC receiver
      - "14268:14268"   # Jaeger thrift HTTP receiver
      - "9411:9411"     # Zipkin Trace receiver
      - "11800:11800"   # Skywalking gRPC receiver
      - "12800:12800"   # Skywalking HTTP receiver
      - "8086:8086"     # InfluxDB Line proto HTTP

    restart: on-failure
